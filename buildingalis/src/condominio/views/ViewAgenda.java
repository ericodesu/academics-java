package condominio.views;

import java.sql.Date;
import javax.swing.table.DefaultTableModel;

import common.handlers.HandlerJanela;
import common.handlers.HandlerInput;
import common.interfaces.Viewable;
import condominio.models.ModelAgenda;
import condominio.daos.DAOAgendas;

/**
 *
 * @author Erick Frederick
 */
public class ViewAgenda extends javax.swing.JFrame implements Viewable {
    public ViewAgenda(ModelAgenda injectedModel, DAOAgendas injectedDao) {
        this._MODELO = injectedModel;
        this._DAO = injectedDao;

        initComponents();
        hidrataTabela();
    }

    @Override
    public final void hidrataTabela(){
        DefaultTableModel tabela = (DefaultTableModel) jTabela.getModel();

        tabela.setNumRows(0);

        this._DAO.Listar().forEach((ap) -> {
            tabela.addRow(new Object[]{
                ap.getIdAgenda(),
                ap.getData(),
                ap.getIdMorador()
            });
        });
    }

    @Override
    public void limpaCamposDeEntrada() {
        this._HANDLER_JANELA.limparListaDeInput(new javax.swing.JTextField[]{
            jTId,
            jTDataRegistro,
            jTIdMorador
        });

        jTDataRegistro.requestFocus();
    }
    
    @Override
    public void atualizaJanela() {
        hidrataTabela();
        limpaCamposDeEntrada();
    }

    @Override
    public void atualizaValoresModelo(Boolean atualizaOId){
        if(atualizaOId) {
            int idAgenda = Integer.parseInt(jTId.getText().trim());

            this._MODELO.setIdAgenda(idAgenda);
        }

        String dataRegistro = this._HANDLER_INPUT.higienizarData(jTDataRegistro.getText().trim());
        int idMorador = Integer.parseInt(jTIdMorador.getText().trim());

        this._MODELO.setData(Date.valueOf(dataRegistro));
        this._MODELO.setIdMorador(idMorador);
    }
 
    private final HandlerJanela _HANDLER_JANELA = new HandlerJanela();
    private final HandlerInput _HANDLER_INPUT = new HandlerInput();
    private final ModelAgenda _MODELO;
    private final DAOAgendas _DAO;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTabela = new javax.swing.JTable();
        jTId = new javax.swing.JTextField();
        jTIdMorador = new javax.swing.JTextField();
        jLId = new javax.swing.JLabel();
        jLDataRegistro = new javax.swing.JLabel();
        jLMorador = new javax.swing.JLabel();
        jBGravar = new javax.swing.JButton();
        jBAlterar = new javax.swing.JButton();
        jBDeletar = new javax.swing.JButton();
        jTDataRegistro = new javax.swing.JFormattedTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jTabela.setBackground(new java.awt.Color(207, 207, 207));
        jTabela.setFont(new java.awt.Font("Calibri Light", 1, 12)); // NOI18N
        jTabela.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Data Registro", "ID Morador"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTabela.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jTabela.setGridColor(new java.awt.Color(207, 207, 207));
        jTabela.setSelectionForeground(new java.awt.Color(0, 0, 0));
        jTabela.setShowHorizontalLines(false);
        jTabela.getTableHeader().setResizingAllowed(false);
        jTabela.getTableHeader().setReorderingAllowed(false);
        jTabela.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabelaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTabela);
        if (jTabela.getColumnModel().getColumnCount() > 0) {
            jTabela.getColumnModel().getColumn(0).setResizable(false);
            jTabela.getColumnModel().getColumn(1).setResizable(false);
            jTabela.getColumnModel().getColumn(2).setResizable(false);
        }

        jTId.setEditable(false);
        jTId.setFont(new java.awt.Font("Calibri Light", 0, 18)); // NOI18N
        jTId.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTId.setBorder(null);
        jTId.setFocusable(false);
        jTId.setSelectedTextColor(new java.awt.Color(240, 240, 240));

        jTIdMorador.setBackground(new java.awt.Color(207, 207, 207));
        jTIdMorador.setFont(new java.awt.Font("Calibri Light", 0, 18)); // NOI18N
        jTIdMorador.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTIdMorador.setBorder(null);

        jLId.setFont(new java.awt.Font("Calibri Light", 1, 24)); // NOI18N
        jLId.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLId.setText("ID");

        jLDataRegistro.setFont(new java.awt.Font("Calibri Light", 1, 24)); // NOI18N
        jLDataRegistro.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLDataRegistro.setText("Data do Registro");

        jLMorador.setFont(new java.awt.Font("Calibri Light", 1, 24)); // NOI18N
        jLMorador.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLMorador.setText("ID do Morador");

        jBGravar.setBackground(new java.awt.Color(85, 179, 59));
        jBGravar.setFont(new java.awt.Font("Calibri Light", 1, 24)); // NOI18N
        jBGravar.setForeground(new java.awt.Color(232, 232, 232));
        jBGravar.setText("Gravar");
        jBGravar.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jBGravar.setBorderPainted(false);
        jBGravar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jBGravar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBGravarActionPerformed(evt);
            }
        });

        jBAlterar.setBackground(new java.awt.Color(82, 82, 82));
        jBAlterar.setFont(new java.awt.Font("Calibri Light", 1, 24)); // NOI18N
        jBAlterar.setForeground(new java.awt.Color(232, 232, 232));
        jBAlterar.setText("Alterar");
        jBAlterar.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jBAlterar.setBorderPainted(false);
        jBAlterar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jBAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBAlterarActionPerformed(evt);
            }
        });

        jBDeletar.setBackground(new java.awt.Color(140, 42, 42));
        jBDeletar.setFont(new java.awt.Font("Calibri Light", 1, 24)); // NOI18N
        jBDeletar.setForeground(new java.awt.Color(232, 232, 232));
        jBDeletar.setText("Deletar");
        jBDeletar.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jBDeletar.setBorderPainted(false);
        jBDeletar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jBDeletar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBDeletarActionPerformed(evt);
            }
        });

        jTDataRegistro.setBackground(new java.awt.Color(207, 207, 207));
        jTDataRegistro.setBorder(null);
        try {
            jTDataRegistro.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("####/##/##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jTDataRegistro.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTDataRegistro.setFont(new java.awt.Font("Calibri Light", 0, 18)); // NOI18N
        jTDataRegistro.setNavigationFilter(null);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jBGravar, javax.swing.GroupLayout.DEFAULT_SIZE, 119, Short.MAX_VALUE)
                        .addGap(58, 58, 58)
                        .addComponent(jBAlterar, javax.swing.GroupLayout.DEFAULT_SIZE, 120, Short.MAX_VALUE)
                        .addGap(58, 58, 58)
                        .addComponent(jBDeletar, javax.swing.GroupLayout.DEFAULT_SIZE, 120, Short.MAX_VALUE))
                    .addComponent(jTId, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jTIdMorador, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLId, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLMorador, javax.swing.GroupLayout.DEFAULT_SIZE, 474, Short.MAX_VALUE)
                            .addComponent(jLDataRegistro, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jTDataRegistro))
                        .addGap(1, 1, 1)))
                .addGap(35, 35, 35)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jLId)
                .addGap(45, 45, 45)
                .addComponent(jTId, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(45, 45, 45)
                .addComponent(jLDataRegistro)
                .addGap(45, 45, 45)
                .addComponent(jTDataRegistro, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(45, 45, 45)
                .addComponent(jLMorador)
                .addGap(45, 45, 45)
                .addComponent(jTIdMorador, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 45, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBGravar, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBAlterar, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBDeletar, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jBGravarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBGravarActionPerformed
        atualizaValoresModelo(false);

        this._DAO.Inserir(this._MODELO);

        atualizaJanela();
    }//GEN-LAST:event_jBGravarActionPerformed

    private void jBAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBAlterarActionPerformed
        atualizaValoresModelo(true);

        this._DAO.Alterar(this._MODELO);

        atualizaJanela();
    }//GEN-LAST:event_jBAlterarActionPerformed

    private void jTabelaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabelaMouseClicked
        this._HANDLER_JANELA.atulizarListaDeInputRelacionadoTabela(new javax.swing.JTextField[]{
            jTId,
            jTDataRegistro,
            jTIdMorador
        }, jTabela);
    }//GEN-LAST:event_jTabelaMouseClicked

    private void jBDeletarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBDeletarActionPerformed
        atualizaValoresModelo(true);

        this._DAO.Deletar(this._MODELO);

        atualizaJanela();
    }//GEN-LAST:event_jBDeletarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ViewAgenda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ViewAgenda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ViewAgenda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ViewAgenda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBAlterar;
    private javax.swing.JButton jBDeletar;
    private javax.swing.JButton jBGravar;
    private javax.swing.JLabel jLDataRegistro;
    private javax.swing.JLabel jLId;
    private javax.swing.JLabel jLMorador;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JFormattedTextField jTDataRegistro;
    private javax.swing.JTextField jTId;
    private javax.swing.JTextField jTIdMorador;
    private javax.swing.JTable jTabela;
    // End of variables declaration//GEN-END:variables
}
